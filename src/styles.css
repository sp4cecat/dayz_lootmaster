:root {
    --bg: #ffffff;
    --bg-soft: #f9f9f9;
    --bg-softer: #d3d3d3;
    --text: #213547;
    --text-hover: #1f2937; /* slightly darker for hover (gray-800) */
    --muted: #6b7280;
    --primary: #646cff; /* Vite brand indigo */
    --primary-hover: #747bff; /* Vite hover (light) */
    --border: #e5e5e5;
    --warn: #f59e0b;
    --error: #ef4444;
    --chip: #eef2ff;
}

:root[data-theme="dark"] {
    --bg: rgb(49, 62, 85); /* Vite dark background */
    --bg-soft: rgb(59, 74, 101); /* Vite dark button bg */
    --bg-softer: rgb(70, 88, 120); /* Vite dark button bg */
    --text: rgba(255, 255, 255, 0.73); /* Vite dark text */
    --text-hover: rgba(255, 255, 255, 0.9); /* higher contrast for hover */
    --muted: #a1a1a1;
    --primary: #646cff;
    --primary-hover: #535bf2; /* Vite hover (dark) */
    --border: #292929;
    --warn: #fbbf24;
    --error: #f87171;
    --chip: #293449;
}

* {
    box-sizing: border-box;
}

html, body, #root {
    height: 100%;
    width: 100%;
}

#root {
    max-width: none !important;
    width: 100% !important;
    padding: 0 !important;
    text-align: initial !important;
    margin: 0 !important;
}

body {
    margin: 0;
    background: var(--bg);
    color: var(--text);
    font-family: Inter, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, "Apple Color Emoji", "Segoe UI Emoji";
    font-size: .8rem;
    line-height: 1.5;
}

h1 {
    font-size: 2.5em;
}

.app {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
}

.app-center {
    align-items: center;
    justify-content: center;
    gap: 12px;
}

.error {
    color: var(--error);
}

.spinner {
    width: 28px;
    height: 28px;
    border: 3px solid var(--border);
    border-top-color: var(--primary);
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}

.app-header {
    display: flex;
    align-items: center;
    padding: 10px 16px;
    border-bottom: 1px solid var(--border);
    gap: 12px;
    background: var(--bg);
    position: sticky;
    top: 0;
    z-index: 5;
}

.brand {
    display: flex;
    align-items: center;
    gap: 8px;
}

.logo {
    font-size: 1rem;
}

.header-actions {
    margin-left: auto;
    display: flex;
    gap: 8px;
}

.btn.icon-only {
    padding: 6px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
}

.icon-muted svg {
    opacity: 0.5;
}

.profile {
    position: relative;
}

.profile-btn {
    display: inline-flex;
    align-items: center;
    gap: 6px;
}

.profile-id {
    max-width: 200px;
    overflow: hidden;
    text-overflow: ellipsis;
}

.dropdown-menu {
    position: absolute;
    top: 100%;
    right: 0;
    margin-top: 6px;
    background: var(--bg);
    color: var(--text);
    border: 1px solid var(--border);
    border-radius: 8px;
    box-shadow: 0 6px 18px rgba(0,0,0,.2);
    padding: 8px 10px;
    min-width: 160px;
    z-index: 20;
    display: flex;
    flex-direction: column;
    gap: 6px;
}

.btn {
    background: var(--bg-soft);
    border: 1px solid var(--border);
    color: var(--text);
    padding: 6px 12px;
    border-radius: 8px;
    cursor: pointer;
}

.btn.primary {
    background: var(--primary);
    border-color: transparent;
    color: white;
}

.btn.primary:hover:not(:disabled) {
    background: var(--primary-hover);
}

.btn:disabled {
    opacity: 0.6;
    cursor: default;
}

.link {
    background: none;
    border: none;
    color: color-mix(in oklab, var(--primary) 50%, white);
    cursor: pointer;
    text-decoration: underline;
    padding: 0;
    font-size: 11px;
}

.link:hover {
    color: var(--primary-hover);
}

.banner {
    display: flex;
    align-items: center;
    padding: 8px 16px;
    border-bottom: 1px solid var(--border);
}

.banner.warn {
    background: color-mix(in oklab, var(--warn) 10%, transparent);
}

.warn-text {
    color: var(--warn);
}

.chip {
    display: inline-flex;
    align-items: center;
    gap: 6px;
    border-radius: 7px;
    padding: 2px 8px;
    background: var(--chip);
    border: 1px solid var(--border);
    margin-left: 6px;
    font-size: 12px;
}

.chip.muted {
    opacity: 0.7;
}

.chip.warn {
    background: color-mix(in oklab, var(--warn) 15%, transparent);
    border-color: color-mix(in oklab, var(--warn) 50%, var(--border));
}

.content.two-pane {
    flex: 1 1 auto;
    display: flex;
    min-height: 0;
    width: 100%;
}

.left-pane {
    flex: 0 0 auto;
    width: 300px;              /* default width */
    min-width: 300px;          /* clamp minimum */
    max-width: 600px;          /* clamp maximum */
    border-right: 1px solid var(--border);
    padding: 12px;
    overflow: auto;
    background: var(--bg-soft);
}

.right-pane {
    flex: 1 1 auto;
    padding: 12px;
    overflow: hidden;
    display: flex;
}

.filters {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    gap: 12px;
}

.filters-row {
    display: flex;
    gap: 8px;
    justify-content: space-between;
    align-items: flex-start;
}
.filters-row span {
    color: var(--muted);
    font-size: 11px;
}
.filters-row .panel-title {
    padding: 0;
    margin: 0;
}
.control.grow {
    flex: 1 1 auto;
}

.basics-stack {
    display: flex;
    flex-direction: column;
    align-content: space-evenly;
    width: min-content;
    gap: 15px;
}

.control {
    display: flex;
    flex-direction: column;
    gap: 6px;
}

.control input[type="text"], .control input[type="number"], .control select, textarea.code-view {
    width: 100%;
    padding: 8px 10px;
    border: 1px solid var(--border);
    border-radius: 8px;
    background: var(--bg);
    color: var(--text);
}

/* Clear button inside text input */
.input-with-clear {
    position: relative;
    width: 100%;
}
.input-with-clear > input[type="text"] {
    padding-right: 28px; /* leave room for the clear icon */
}
.clear-input-btn {
    position: absolute;
    right: 6px;
    top: 50%;
    transform: translateY(-50%);
    width: 18px;
    height: 18px;
    border: 1px solid var(--border);
    border-radius: 50%;
    background: var(--bg-soft);
    color: var(--muted);
    line-height: 16px;
    font-size: 14px;
    text-align: center;
    cursor: pointer;
    padding: 0;
}
.clear-input-btn:hover {
    color: var(--text-hover);
    border-color: color-mix(in oklab, var(--border), var(--primary) 40%);
}
.clear-input-btn:focus {
    outline: none;
    box-shadow: 0 0 0 2px color-mix(in oklab, var(--primary) 30%, transparent);
}

.control.mixed input[type="number"]::placeholder {
    color: var(--muted);
}

.control.full {
    flex: 1 1 100%;
    width: 100%;
    background: var(--bg-softer);
}

.checkbox-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));
    gap: 6px;
}

.checkbox-grid {
    row-gap: 0; /* halve vertical spacing in edit form */
}

/* Remove bounding box styling from fieldsets */
fieldset {
    border: 0;
    padding: 0;
    margin: 0;
}

legend {
    margin: 0 0 6px 0;
    padding: 0;
    font-weight: 600;
    width: 100%;
    display: block;
    align-items: center;
    gap: 8px;
}

/* Filters panel: make section legends look like tabs */
.filters fieldset > legend {
    display: flex;
    align-items: center;
    gap: 8px;
    background: var(--bg-softer);
    border-bottom: 1px solid var(--border);
    border-radius: 8px 8px 0 0;
    padding: 6px 10px;
    box-shadow: 0 1px 0 rgba(0,0,0,0.03);
}

/* Larger chevron for accordion toggles */
.filters fieldset > legend .chevron {
    font-size: 1.15rem;
    line-height: 1;
    display: inline-block;
    margin-right: 4px;
}

.filters fieldset > legend > button {
    font-size: 12px;
    font-weight: 600;
    color: var(--text);
    text-decoration: none;
}

/* Improve hover color for accordion toggle buttons */
.filters fieldset > legend > button:hover {
    color: var(--text-hover);
    text-decoration: underline;
    text-underline-offset: 2px;
}

/* Make the 'manage' action look muted and underlined */
.filters fieldset > legend > button.manage-link {
    color: var(--muted);
    text-decoration: underline;
    text-underline-offset: 2px;
}

/* Subtle, clearer hover state for 'manage' link */
.filters fieldset > legend > button.manage-link:hover {
    color: color-mix(in oklab, var(--muted) 60%, var(--primary));
    text-decoration: underline;
}

/* Remove default focus border/outline from legend buttons in Filters */
.filters fieldset > legend > button:focus,
.filters fieldset > legend > button:focus-visible {
    outline: none;
    box-shadow: none;
    border: none;
}

.checkbox {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 6px;
    border-radius: 6px;
}

.checkbox.checked {
    background: color-mix(in oklab, var(--primary) 30%, transparent);
}

.checkbox.indeterminate {
    background: color-mix(in oklab, var(--muted) 10%, transparent);
}

/* Subtle hover highlighting on types list rows (non-selected only) */
.table-body .tr:not(.selected):hover > .td {
    background: color-mix(in oklab, var(--primary) 8%, transparent);
}

/* Slightly stronger hover for selected rows to keep feedback consistent */
.table-body .tr.selected:hover > .td {
    background: color-mix(in oklab, var(--primary) 16%, transparent);
}

.types-table {
    display: grid;
    grid-auto-rows: auto;
    /* Name, Group, Nom, Min, Lifetime, Restock (content-sized), then Category, Usage, Value, Flags fill remaining width */
    grid-template-columns: max-content min-content min-content min-content max-content max-content min-content 1.5fr 1.5fr min-content;
    /* Prevent tracks from expanding to fill container, but let items stretch to track height */
    align-content: start;
    align-items: stretch;
    border: 1px solid var(--border);
    border-radius: 10px;
    background: var(--bg-soft);
}

/* Virtualization spacer rows must span the entire grid to reserve scroll height */
.spacer-row {
    grid-column: 1 / -1;
}

/* Without Group column */
.types-table.no-group {
    /* Name, Nom, Min, Lifetime, Restock, Category, Usage, Value, Flags */
    grid-template-columns: max-content min-content min-content max-content max-content min-content 1.5fr 1.5fr min-content;
}

/* Ensure condensed view is always a single column, even when no-group is present */
.types-table.condensed,
.types-table.condensed.no-group {
    grid-template-columns: max-content !important;
    width: 100%;
    flex: 1 1 auto;
    align-self: flex-start;
    overflow: auto;
    max-height: calc(100vh - 100px);
}

/* Condensed mode: only Name column rendered */
.types-table.condensed {
    grid-template-columns: max-content;
    width: min-content;
    flex: 0 0 auto;
}

/* Virtualization spacers spanning all columns */
.spacer-row {
    grid-column: 1 / -1;
    height: 0;
}

/* Name header: left label, right-aligned "Select all" link */
.th.name {
  display: flex;
  align-items: center;
  gap: 8px;
}
.th.name .select-all-link {
  margin-left: auto;
  white-space: nowrap;
}

/* Flatten header, body and rows into the same grid to align columns */
.table-header,
.table-body,
.tr {
    display: contents;
}

/* Header cells are sticky within the scrollable .types-table */
.th {
    position: sticky;
    top: 0;
    z-index: 1;
    padding: 12px 18px;
    background: var(--bg-softer);
    border-bottom: 1px solid var(--border);
    font-weight: 600;
        align-self: stretch; /* fill the header row track height */
    justify-content: center;
}

.th.sortable {
    cursor: pointer;
    user-select: none;
    display: flex;
    align-items: center;
    gap: 6px;
}
.th.sortable > span:first-child {
    text-decoration: underline;
    text-underline-offset: 2px;
}
.th.sortable:hover > span:first-child {
    text-decoration-thickness: 2px;
}

.sort-ind {
    font-size: 10px;
    opacity: 0.7;
}

.td {
    padding: 12px 18px;
    border-bottom: 1px solid var(--border);
    cursor: pointer;
    background: var(--bg-soft);
    display: flex;
    align-items: center;
    justify-content: center;
}

.tr.selected > .td {
    background: color-mix(in oklab, var(--primary) 12%, transparent);
}

.td.name {
    justify-content: flex-start;
    white-space: nowrap;
}

.td.name.modified {
    color: color-mix(in oklab, var(--text) 70%, var(--warn) 30%);
}

.chips {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    align-items: center;
}

/* Filter panel chips have fixed width for consistent layout */
.filters .chips .chip {
    flex: 1 0 100px;
    justify-content: center;
    text-align: center;
    overflow: hidden;
    text-overflow: ellipsis;
    font-size: 11px;
    font-weight: 600;
    color: var(--text);
}

/* Differentiate the "None" chip visually */
.filters .chips .chip.none-chip {
    background: color-mix(in oklab, var(--muted) 25%, var(--chip));
    border-color: color-mix(in oklab, var(--muted) 50%, var(--border));
    color: color-mix(in oklab, var(--text) 80%, var(--muted) 20%);
}

.table-and-form {
    display: flex;
    gap: 12px;
    height: 100%;
    width: 100%;
}

/* Make the types table flex and scroll properly inside the table-and-form layout */
.table-and-form > .types-table {
    flex: 1 1 0;
    min-height: 0;   /* critical for enabling scrolling in flex containers */
    overflow: auto;
}

/* When edit form is rendered, let the types list only consume content width */
.table-and-form.has-form > .types-table {
    flex: 0 0 auto;
    width: max-content;
    max-width: 70%; /* safety cap to prevent extreme overflow */
    overflow: auto;
}

.edit-form-container {
    flex: 1 1 0;
    min-width: 360px;
    border: 1px solid var(--border);
    border-radius: 10px;
    display: flex;
    overflow: hidden;
    background: var(--bg-soft);
    padding: 8px 15px;
}
/* Prevent any direct child from exceeding the container height */
.edit-form-container > * {
    max-height: 100%;
    min-height: 0;
    overflow: auto;
    flex: 1 1 auto;
}

.edit-form {
    display: flex;
    flex-direction: column;
    gap: 12px;
    padding: 12px;
    height: 100%;
}

.edit-form-header {
    display: flex;
    align-items: center;
    gap: 8px;
}

.form-grid {
    display: flex;
    flex-wrap: wrap;
    gap: 30px;
    align-items: flex-start;
    justify-content: flex-start;
    flex: 1 1 auto;
    overflow: auto;
    min-height: 0; /* enable inner scrolling in flex context */
    flex-direction: row;
    max-height: calc(100vh - 100px);
}

.form-grid > .control,
.form-grid > fieldset.control {
    flex: 1 1 220px;
    min-width: 180px;
}

/* Panels (Flags, Usage, Value, Tag) stacked vertically and wrapping into columns */
.edit-form .panels-wrap {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    gap: 30px;
    align-content: flex-start;
    flex: 0 0 auto;   /* fill remaining space next to basics-stack */
    height: 100%;     /* enable vertical wrapping by container height */
    overflow: hidden; /* no vertical scroll needed */
    justify-content: flex-start;
    width: auto;
}
.edit-form .panels-wrap .checkbox-grid {
    width: max-content;
}

.edit-form .panels-item {
    flex: 1 0 max-content;
    width: max-content;
    min-width: 220px;
    background: var(--bg-softer);
    padding: 10px;
}

/* All panels: contents wrap vertically within available height */
.edit-form .panels-item .checkbox-grid {
    display: grid;
    grid-auto-rows: max-content;
    grid-template-columns: repeat(2, max-content); /* exactly two columns */
    gap: 3px 10px;                                  /* row gap / column gap */
    width: max-content;                              /* size to both columns */
}
.edit-form .usage-panel .checkbox span {
    white-space: nowrap; /* keep labels on one line for stable column widths */
}

/* Usage panel should not exceed parent height */
.edit-form .usage-panel {
    max-height: 100%;
    overflow: hidden;
    flex: 0 0 auto;
}

/* Edit form control sizing */
.edit-form .control input[type="number"] {
    width: 100px;
}

.edit-form .control select {
    width: auto;
    max-width: 100%;
    align-self: start; /* prevent stretching in grid/flex parent */
}

.errors {
    margin-top: 8px;
    padding: 8px;
    border: 1px solid var(--error);
    color: var(--error);
    border-radius: 8px;
    background: color-mix(in oklab, var(--error) 10%, transparent);
}

.modal-backdrop {
    position: fixed;
    inset: 0;
    background: rgba(0, 0, 0, .5);
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 24px;
    z-index: 10;
}

.modal {
    width: min(900px, 100%);
    max-height: 90vh;
    overflow: auto;
    background: var(--bg);
    color: var(--text);
    border: 1px solid var(--border);
    border-radius: 12px;
    padding: 24px;
}

.modal.full {
    width: min(1200px, 100%);
    height: 90vh;
    display: flex;
    flex-direction: column;
}

.modal-header {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 12px;
    border-bottom: 1px solid var(--border);
    position: sticky;
    top: 0;
    background: var(--bg);
}

.modal-body {
    padding: 24px;
    display: flex;
    flex-direction: column;
    gap: 12px;
}

.resolve-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 12px;
}

.resolve-section h4 {
    margin: 0 0 6px;
}

.chips.selectable .chip {
    cursor: pointer;
    background: var(--bg);
    display: flex;             /* center content vertically */
    align-items: center;        /* center content within equal-height row */
    align-self: stretch;        /* ensure the cell fills the row track height */
}

.chips .chip.selected {
    background: color-mix(in oklab, var(--primary) 20%, transparent);
    border-color: var(--primary);
}

textarea.code-view {
    flex: 1;
    font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, "Liberation Mono", monospace;
}

.code-block {
    flex: 1 1 auto;
    min-height: 200px;
    overflow: auto;
    padding: 12px;
    border: 1px solid var(--border);
    border-radius: 8px;
    background: var(--bg);
    color: var(--text);
    white-space: pre;
    font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, "Liberation Mono", monospace;
    line-height: 1.4;
}

.spacer {
    flex: 1 1 auto;
}

/* Vertical resizer between left and right panes */
.pane-resizer {
    flex: 0 0 6px;
    cursor: col-resize;
    background: linear-gradient(to right, transparent, var(--border), transparent);
    border-right: 1px solid var(--border);
}
.pane-resizer:hover {
    background: linear-gradient(to right, transparent, color-mix(in oklab, var(--primary) 40%, var(--border)), transparent);
}
