:root {
  --bg: #ffffff;
  --bg-soft: #f9f9f9;
  --text: #213547;
  --muted: #6b7280;
  --primary: #646cff; /* Vite brand indigo */
  --primary-hover: #747bff; /* Vite hover (light) */
  --border: #e5e5e5;
  --warn: #f59e0b;
  --error: #ef4444;
  --chip: #eef2ff;
}

:root[data-theme="dark"] {
  --bg: rgb(30,41,59); /* Vite dark background */
  --bg-soft: rgb(29, 45, 83); /* Vite dark button bg */
  --text: rgba(255, 255, 255, 0.87); /* Vite dark text */
  --muted: #a1a1a1;
  --primary: #646cff;
  --primary-hover: #535bf2; /* Vite hover (dark) */
  --border: #2e2e2e;
  --warn: #fbbf24;
  --error: #f87171;
  --chip: #1b2331;
}

* { box-sizing: border-box; }
html, body, #root { height: 100%; width: 100%; }
#root { max-width: none !important; width: 100% !important; padding: 0 !important; text-align: initial !important; margin: 0 !important; }
body { margin: 0; background: var(--bg); color: var(--text); font-family: Inter, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, "Apple Color Emoji", "Segoe UI Emoji"; font-size: .8rem; line-height: 1.5; }
.app { width: 100%; height: 100%; display: flex; flex-direction: column; }
.app-center { align-items: center; justify-content: center; gap: 12px; }
.error { color: var(--error); }
.spinner { width: 28px; height: 28px; border: 3px solid var(--border); border-top-color: var(--primary); border-radius: 50%; animation: spin 1s linear infinite; }
@keyframes spin { to { transform: rotate(360deg); } }

.app-header { display: flex; align-items: center; padding: 10px 16px; border-bottom: 1px solid var(--border); gap: 12px; background: var(--bg); position: sticky; top: 0; z-index: 5; }
.brand { display: flex; align-items: center; gap: 8px; }
.logo { font-size: 1rem; }
.header-actions { margin-left: auto; display: flex; gap: 8px; }

.btn { background: var(--bg-soft); border: 1px solid var(--border); color: var(--text); padding: 6px 12px; border-radius: 8px; cursor: pointer; }
.btn.primary { background: var(--primary); border-color: transparent; color: white; }
.btn.primary:hover:not(:disabled) { background: var(--primary-hover); }
.btn:disabled { opacity: 0.6; cursor: default; }
.link { background: none; border: none; color: var(--primary); cursor: pointer; text-decoration: underline; padding: 0; }
.link:hover { color: var(--primary-hover); }

.banner { display: flex; align-items: center; padding: 8px 16px; border-bottom: 1px solid var(--border); }
.banner.warn { background: color-mix(in oklab, var(--warn) 10%, transparent); }
.warn-text { color: var(--warn); }
.chip { display: inline-flex; align-items: center; gap: 6px; border-radius: 999px; padding: 2px 8px; background: var(--chip); border: 1px solid var(--border); margin-left: 6px; font-size: 12px; }
.chip.muted { opacity: 0.7; }
.chip.warn { background: color-mix(in oklab, var(--warn) 15%, transparent); border-color: color-mix(in oklab, var(--warn) 50%, var(--border)); }

.content.two-pane { flex: 1 1 auto; display: flex; min-height: 0; width: 100%; }
.left-pane { flex: 0 0 320px; border-right: 1px solid var(--border); padding: 12px; overflow: auto; }
.right-pane { flex: 1 1 auto; padding: 12px; overflow: hidden; display: flex; }

.filters { display: flex; flex-direction: column; gap: 12px; }
.filters-row { display: flex; gap: 8px; }
.control { display: flex; flex-direction: column; gap: 6px; }
.control input[type="text"], .control input[type="number"], .control select, textarea.code-view {
  width: 100%; padding: 8px 10px; border: 1px solid var(--border); border-radius: 8px; background: var(--bg); color: var(--text);
}
.control.mixed input[type="number"]::placeholder { color: var(--muted); }
.control.full { flex: 1 1 100%; width: 100%; }
.checkbox-grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); gap: 6px; }

/* Remove bounding box styling from fieldsets */
fieldset { border: 0; padding: 0; margin: 0; }
legend { margin: 0 0 6px 0; padding: 0; font-weight: 600; }
.checkbox { display: flex; align-items: center; gap: 8px; padding: 6px; border-radius: 6px; }
.checkbox.checked { background: color-mix(in oklab, var(--primary) 10%, transparent); }
.checkbox.indeterminate { background: color-mix(in oklab, var(--muted) 10%, transparent); }

.types-table {
  display: grid;
  grid-auto-rows: auto;
  grid-template-columns: max-content max-content max-content max-content max-content max-content max-content; /* Name, Category, Usage, Value, Tag, Nominal/Min, Lifetime */
  border: 1px solid var(--border);
  border-radius: 10px;
  background: var(--bg-soft);
  width: max-content;
  flex: 0 0 auto;
  overflow: auto;
  max-height: calc(100vh - 230px);
}

/* Flatten header, body and rows into the same grid to align columns */
.table-header,
.table-body,
.tr { display: contents; }

/* Header cells are sticky within the scrollable .types-table */
.th {
  position: sticky;
  top: 0;
  z-index: 1;
  padding: 8px 12px;
  background: var(--bg-soft);
  border-bottom: 1px solid var(--border);
  font-weight: 600;
}

.td {
  padding: 8px 12px;
  border-bottom: 1px solid var(--border);
  cursor: pointer;
}
.tr.selected > .td {
  background: color-mix(in oklab, var(--primary) 12%, transparent);
}

.td.name { display: flex; align-items: center; white-space: nowrap; }
.chips { display: flex; flex-wrap: wrap; gap: 4px; align-items: center; }

/* Condensed mode: only Name column rendered */
.types-table.condensed { grid-template-columns: max-content; }

.table-and-form { display: flex; gap: 12px; height: 100%; width: 100%; }
.edit-form-container { flex: 1 1 0; min-width: 360px; border: 1px solid var(--border); border-radius: 10px; overflow: auto; background: var(--bg); }

.edit-form { display: flex; flex-direction: column; gap: 12px; padding: 12px; }
.edit-form-header { display: flex; align-items: center; gap: 8px; }
.form-grid {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  align-items: flex-start;
}
.form-grid > .control,
.form-grid > fieldset.control {
  flex: 1 1 220px;
  min-width: 180px;
}

/* Edit form control sizing */
.edit-form .control input[type="number"] {
  width: 100px;
}
.edit-form .control select {
  width: auto;
  max-width: 100%;
  align-self: start; /* prevent stretching in grid/flex parent */
}

.errors { margin-top: 8px; padding: 8px; border: 1px solid var(--error); color: var(--error); border-radius: 8px; background: color-mix(in oklab, var(--error) 10%, transparent); }

.modal-backdrop { position: fixed; inset: 0; background: rgba(0,0,0,.5); display: flex; align-items: center; justify-content: center; padding: 24px; z-index: 10; }
.modal { width: min(900px, 100%); max-height: 90vh; overflow: auto; background: var(--bg); color: var(--text); border: 1px solid var(--border); border-radius: 12px; }
.modal.full { width: min(1200px, 100%); height: 90vh; display: flex; flex-direction: column; }
.modal-header { display: flex; align-items: center; gap: 8px; padding: 12px; border-bottom: 1px solid var(--border); position: sticky; top: 0; background: var(--bg); }
.modal-body { padding: 12px; display: flex; flex-direction: column; gap: 12px; }
.resolve-grid { display: grid; grid-template-columns: repeat(2, 1fr); gap: 12px; }
.resolve-section h4 { margin: 0 0 6px; }
.chips.selectable .chip { cursor: pointer; }
.chips .chip.selected { background: color-mix(in oklab, var(--primary) 20%, transparent); border-color: var(--primary); }

textarea.code-view { flex: 1; font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, "Liberation Mono", monospace; }

.spacer { flex: 1 1 auto; }
